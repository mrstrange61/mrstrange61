vector<int>bottomview(Node * node){
  vector<int>v;
  if(node==NULL)
    return v;
  queue<pair<Node*,int>q;
  map<int,int>m;
  q.push({node,0});
  while(!q.empty()){
    auto f=q.front();
    int l=f.second;
    int n=f.first;
    if(m.find(l)==m.end())m[l]=n->data;
    else{
      m[l]=n->data;
    }
    if(n->left!=NULL)q.push({n->left,l-1});
    if(n->right!=NULL)q.push({n->right,l+1});
  }
  for(auto i:m){
    v.push_back(i.second);
   }
   return v;
   }
    
